---
- name: install kernel dependencies [arch]
  pacman: name="{{ item }}"
  with_items:
  - base-devel
  - btrfs-progs
  - bzip2
  - bc
  - git
  - inetutils
  - kmod
  - tar
  when: ansible_distribution == 'Archlinux'
  tags:
  - kernel

- name: install kernel dependencies [debian]
  apt: name="{{ item }}"
  with_items:
  - build-essential
  - bzip2
  - git
  - libncurses5-dev
  - libssl-dev
  - tar
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags:
  - kernel

- name: install bootstrap kernel
  shell: |
    cp -arf roles/kernel/files/* /
    if [ -f /usr/bin/apt-get ]; then
      update-initramfs -u -k 4.12.0-custom || true
      apt-get -y purge linux-image* linux-headers-*
    elif [ -f /usr/bin/pacman ]; then
      mkinitcpio -c /etc/mkinitcpio.conf -g /boot/initrd.img-4.12.0-custom -k 4.12.0-custom || true
      pacman -R --noconfirm linux
    fi
  when: bootstrap | default("false") | match("true")
  tags:
  - kernel

- name: fetch latest kernel sources (this will take a while)
  git:
    repo: https://github.com/jwrdegoede/linux-sunxi.git
    dest: /usr/src/linux-sunxi
    force: yes
  when: bootstrap | default("false") | match("false")
  register: kernel_sources
  tags:
  - kernel

- name: build kernel (this will take a while)
  make:
    chdir: /usr/src/linux-sunxi
    target: -j9
    params:
      LOCALVERSION: -custom
  when: kernel_sources.changed
  tags:
  - kernel

- name: install kernel modules
  make:
    chdir: /usr/src/linux-sunxi
    target: modules_install
    params:
      LOCALVERSION: -custom
  when: kernel_sources.changed
  tags:
  - kernel

- name: install new kernel
  shell: |
    mount /boot || true
    cp -vf /boot/vmlinuz-4.12.0-custom /boot/vmlinuz-4.12.0-custom.old || true
    cp -vf /usr/src/linux-sunxi/arch/x86/boot/bzImage /boot/vmlinuz-4.12.0-custom
  when: kernel_sources.changed

- name: add modules to initramfs [arch]
  lineinfile:
    path: /etc/mkinitcpio.conf
    regexp: '^MODULES='
    line: MODULES="btusb pwm-lpss pwm-lpss-platform"
    create: yes
  notify:
  - mkinitcpio
  when: ansible_distribution == 'Archlinux'
  tags:
  - kernel

- name: change hook loading order [arch]
  lineinfile:
    path: /etc/mkinitcpio.conf
    regexp: '^HOOKS='
    line: HOOKS="base udev block autodetect modconf filesystems fsck"
    create: yes
  notify:
  - mkinitcpio
  when: ansible_distribution == 'Archlinux'
  tags:
  - kernel

- name: add modules to initramfs [debian]
  lineinfile:
    path: /etc/initramfs-tools/modules
    line: "{{ item }}"
    create: yes
  with_items:
  - btusb
  - pwm-lpss
  - pwm-lpss-platform
  notify:
  - update-initramfs
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags:
  - kernel